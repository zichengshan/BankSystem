{"ast":null,"code":"var _jsxFileName = \"/Users/zicheng.s/Documents/UC_Irvine_Info/Class/2022Spring/266P/Project/Bank_React/my-bank/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home(props) {\n  _s();\n\n  const [balance, setBalance] = React.useState(props.balance);\n  const [reminderText, setReminderText] = React.useState(\"\");\n  const token = props.token; // postObj saves the userId and the amount of money entered in the input box\n\n  const [postObj, setPostObj] = React.useState({\n    id: props.id,\n    amount: \"\"\n  });\n  /**\n   * updateAmount() function is used to update the amount every time the user make changes\n   * @param event\n   */\n\n  function updateAmount(event) {\n    setPostObj(prevData => ({ ...prevData,\n      amount: event.target.value\n    }));\n  } // function checkNumericInput() {\n  //     const regex = /(0|[1-9][0-9]*)/\n  //     let result\n  //     const amount = postObj.amount.split('.')\n  //     if (amount.length === 1) {\n  //         result = postObj.amount.match(regex)[0] === amount[0]\n  //     } else if (amount.length === 2) {\n  //         result = postObj.amount.match(\n  //                 regex)[0] === amount[0] &&\n  //             (amount[1] <= 99 && amount[0] >= 0) &&\n  //             (amount[0] >= 0 && amount[0] <= 4294967295)\n  //     }\n  //     return result\n  // }\n\n  /**\n   * Deposit money\n   */\n\n\n  function deposit() {\n    if (postObj.amount <= 4294967295.99) {\n      fetch('http://localhost:8081/bankSys/user/deposit', {\n        method: 'POST',\n        headers: {\n          'token': token,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postObj)\n      }).then(response => response.json()).then(data => {\n        if (data.status === 500) {\n          setReminderText(\"Invalid input\");\n        } else {\n          setReminderText(`Successfully deposited $${postObj.amount}!`);\n          setBalance(data.data);\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } else {\n      setReminderText(\"Invalid input\");\n    }\n  }\n  /**\n   * Withdrawal money\n   */\n\n\n  function withdrawal() {\n    fetch('http://localhost:8081/bankSys/user/withdrawal', {\n      method: 'POST',\n      headers: {\n        'token': token,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postObj)\n    }).then(response => response.json()).then(data => {\n      if (data.status === 500) {\n        setReminderText(data.msg);\n      } else {\n        setReminderText(`Successfully withdraw $${postObj.amount}!`);\n        setBalance(data.data);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: `Hi, ${props.username} ðŸ‘‹`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"hone-text\",\n      children: [\" Current balance \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"home-balance\",\n        children: [\" $\", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: 0,\n      onChange: updateAmount,\n      name: \"amount\",\n      value: postObj.amount,\n      className: \"home-form-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reminderText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deposit,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: withdrawal,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.changeLoginStatus,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"RElH5T4wNTgQS3yFAEg8bcuLGmg=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Home","props","balance","setBalance","useState","reminderText","setReminderText","token","postObj","setPostObj","id","amount","updateAmount","event","prevData","target","value","deposit","fetch","method","headers","body","JSON","stringify","then","response","json","data","status","catch","error","console","withdrawal","msg","username","changeLoginStatus"],"sources":["/Users/zicheng.s/Documents/UC_Irvine_Info/Class/2022Spring/266P/Project/Bank_React/my-bank/src/components/Home.js"],"sourcesContent":["import React from \"react\";\n// Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\n\nexport default function Home(props) {\n    const [balance, setBalance] = React.useState(props.balance)\n    const [reminderText, setReminderText] = React.useState(\"\")\n    const token = props.token\n    // postObj saves the userId and the amount of money entered in the input box\n    const [postObj, setPostObj] = React.useState({\n        id: props.id,\n        amount: \"\"\n    })\n\n    /**\n     * updateAmount() function is used to update the amount every time the user make changes\n     * @param event\n     */\n    function updateAmount(event) {\n        setPostObj(prevData => ({\n            ...prevData,\n            amount: event.target.value\n        }))\n    }\n\n    // function checkNumericInput() {\n    //     const regex = /(0|[1-9][0-9]*)/\n    //     let result\n    //     const amount = postObj.amount.split('.')\n    //     if (amount.length === 1) {\n    //         result = postObj.amount.match(regex)[0] === amount[0]\n    //     } else if (amount.length === 2) {\n    //         result = postObj.amount.match(\n    //                 regex)[0] === amount[0] &&\n    //             (amount[1] <= 99 && amount[0] >= 0) &&\n    //             (amount[0] >= 0 && amount[0] <= 4294967295)\n    //     }\n    //     return result\n    // }\n\n    /**\n     * Deposit money\n     */\n    function deposit() {\n        if(postObj.amount <= 4294967295.99){\n            fetch('http://localhost:8081/bankSys/user/deposit', {\n                method: 'POST',\n                headers: {\n                    'token': token,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postObj),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if(data.status === 500){\n                        setReminderText(\"Invalid input\")\n                    }else{\n                        setReminderText(`Successfully deposited $${postObj.amount}!`)\n                        setBalance(data.data)\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        }\n        else{\n            setReminderText(\"Invalid input\")\n        }\n    }\n\n    /**\n     * Withdrawal money\n     */\n    function withdrawal() {\n            fetch('http://localhost:8081/bankSys/user/withdrawal', {\n                method: 'POST',\n                headers: {\n                    'token': token,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postObj),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if(data.status === 500){\n                        setReminderText(data.msg)\n                    }else{\n                        setReminderText(`Successfully withdraw $${postObj.amount}!`)\n                        setBalance(data.data)\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n    }\n\n    return (\n        <div className=\"home\">\n            <h1 className=\"home-title\">{`Hi, ${props.username} ðŸ‘‹`}</h1>\n            <p className=\"hone-text\"> Current balance <span className=\"home-balance\"> ${balance}</span></p>\n            <input\n                placeholder={0}\n                onChange={updateAmount}\n                name=\"amount\"\n                value={postObj.amount}\n                className=\"home-form-input\"\n            />\n            <p>{reminderText}</p>\n            <button onClick={deposit}>Deposit</button>\n            <button onClick={withdrawal}>Withdraw</button>\n            <button onClick={props.changeLoginStatus}>Logout</button>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}